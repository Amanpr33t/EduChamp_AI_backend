const { OpenAI } = require("langchain/llms/openai")
const { PromptTemplate } = require("langchain/prompts")
const { LLMChain, SimpleSequentialChain } = require("langchain/chains")

const api_key = process.env.OPENAI_API_KEY

const model = new OpenAI({
    temperature: 0.7,
    openAIApiKey: api_key
})

// This function is used to generate a short summary of a story generated by openAI.
const generateStoryWithSummary = async (req, res, next) => {
    try {
        const responseStory = req.responseStory //Story whose summary is to be created
        const promptInput = req.promptInput //Prompt input provided by the user from the frontend
        const theme = req.theme //Theme of the story provided by the user from the frontend.
        const summaryTemplate = `Write a short summary ,in less than 50 words, of a story that you had generated earler. Here is the story: ${responseStory}. ${theme ? `Here is the theme of the story: ${theme}` : ''} {prompt}`
        const summaryPrompt = new PromptTemplate({
            template: summaryTemplate,
            inputVariables: ["prompt"]
        });
        const generateSummary = new LLMChain({
            llm: model,
            prompt: summaryPrompt
        })
        const overAllChain = new SimpleSequentialChain({
            chains: [generateSummary],
            verbose: true
        })
        const summaryOfStory = await overAllChain.run("") //This is the summary of the story created by openAI
        res.status(200).json({
            status: 'ok',
            prompt: promptInput,
            fullStory: responseStory,
            summaryOfStory,
            theme
        })
    } catch (error) {
        next(error)
    }
}

module.exports = {
    generateStoryWithSummary
}